import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ITask } from '../task-list/task';

/**
 * ITodo is the basic interface for a todo entity that we can
 * pass between components, and from components to the web
 * pages. The fields are:
 *
 *  - completed: boolean
 *  - createdOn: string
 *  - id: number - unique identifier generated by the swagger API
 *  - title: ITodoTitle - see below.
 *
 * When we call the API to get a Todo, the resulting JSON should look like:
 *
 *    Todo: {
 *      "completed": "...",
 *      "createdON": "...",
 *      "id": "...",
 *      "title": {
 *        "title": "...",
 *        "task": "..."
 *      }
 *    }
 */
export interface ITodo {
  completed: boolean;
  createdOn: string;
  id: number;
  description: string;
  title: string;
}


@Injectable({
  providedIn: 'root'
})
export class TodosService {

  // baseUrl = 'http://ec2-18-191-63-47.us-east-2.compute.amazonaws.com:8080/todos';
  baseUrl = 'http://ec2-54-205-235-199.compute-1.amazonaws.com:8080/todos';
  constructor(private httpCli: HttpClient) {  }

  postTodo(todoForm: any): Observable<string>{
    const httpHead = {
      headers: new HttpHeaders({
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*', // ABSOLUTELY necessary. Allows control from the API
      })
    };
    // We send our 'todoForm' as the body of our request
    console.log(JSON.stringify(todoForm));
    return this.httpCli.post<string>(this.baseUrl, JSON.stringify(todoForm), httpHead);
  }

  getTodos(): Observable<ITask[]>{
    // Our API needs a special HEAD to communicate.
    const httpHead = {
      headers: new HttpHeaders({
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*', // ABSOLUTELY necessary. Allows control from the API
      })
    };

    return this.httpCli.get<ITask[]>(this.baseUrl, httpHead);
  }

  deleteTodo(id: number): Observable<string[]>{
      const httpHead = {
        headers: new HttpHeaders({
          'Content-Type': 'application/json',
          'Access-Control-Allow-Origin': '*',
        })
      };
      return this.httpCli.delete<string[]>(this.baseUrl + '/' + id, httpHead);
  }

  updateTodo(todoForm: ITodo): Observable<string>{
    const httpHead = {
      headers: new HttpHeaders({
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*', // ABSOLUTELY necessary. Allows control from the API
      })
    };
    // const url = `${this.baseUrl}/${todoForm.id}`;
    // We send our 'todoForm' as the body of our request
    return this.httpCli.put<string>(this.baseUrl, JSON.stringify(todoForm), httpHead);
  }
}

